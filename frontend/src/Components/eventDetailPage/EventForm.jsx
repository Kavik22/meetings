'use client';

import { useState } from 'react';
import Link from 'next/link';

export default function EventForm({ eventId, initialCount }) {
    const [participantsCount, setParticipantsCount] = useState(initialCount);
    const [formData, setFormData] = useState({
        name: "",
        tag: "",
        email: "",
        found_out_about_us: "",
        other_source: "",
        direction_of_study: "",
    });

    const [aproveSubmit, setAproveSubmit] = useState(false);
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [error, setError] = useState(null);
    const [success, setSuccess] = useState(false);

    const handleChange = (event) => {
        setFormData({
            ...formData,
            [event.target.name]: event.target.value,
        });
    }

    const handleSubmit = async (event) => {
        event.preventDefault();
        setIsSubmitting(true);
        setError(null);

        if (formData.found_out_about_us !== "Other") {
            formData.other_source = "";
        }

        try {
            const response = await fetch(`${process.env.NEXT_PUBLIC_IMAGE_URL}/api/v1/events/${eventId}/participants/add`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                },
                credentials: 'include',
                body: JSON.stringify(formData)
            });

            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã');
            }

            const data = await response.json();
            setSuccess(true);
            setParticipantsCount(count => count + 1);
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞:', err);
            setError(err.message);
        } finally {
            setIsSubmitting(false);
        }
    }

    const options = [
        { id: "vk", value: "VK", label: "–ì—Ä—É–ø–ø–∞ AIESEC –≤ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ –≤ –í–ö" },
        { id: "tg", value: "TG", label: "–¢–ì –∫–∞–Ω–∞–ª" },
        { id: "friend", value: "Friend", label: "–û—Ç –∑–Ω–∞–∫–æ–º–æ–≥–æ –∏–∑ AIESEC" },
        { id: "past", value: "PastEvent", label: "–ë—ã–ª –Ω–∞ –ø—Ä–æ—à–ª—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –æ—Ç AIESEC" },
        { id: "other", value: "Other", label: "–î—Ä—É–≥–æ–µ" }
    ];

    return (
        <div className="event-form">
            <p className="event-detail-item">
                <span>üë•</span> –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {participantsCount}
            </p>
            {success ? (
                <div className="success-message">–î–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è—Ç—ã, –±—É–¥—É –∂–¥–∞—Ç—å —Ç–µ–±—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏!</div>
            ) : (
                <form onSubmit={handleSubmit}>
                    <div>
                        <input type="text" name="name" placeholder="–ö–∞–∫ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?" onChange={handleChange} required />
                    </div>
                    <div>
                        <input type="email" name="email" placeholder="–¢–≤–æ–π email" onChange={handleChange} required />
                    </div>
                    <div>
                        <input type="text" name="tag" placeholder="–¢–≤–æ–π –Ω–∏–∫ —Ç–≥ –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –í–ö" onChange={handleChange} required />
                    </div>

                    <div className="found_out_about_us">
                        <label htmlFor="found_out_about_us">–û—Ç–∫—É–¥–∞ —Ç—ã —É–∑–Ω–∞–ª –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏?</label>
                        <div className="options-container">
                            {options.map((option) => (
                                <div
                                    key={option.id}
                                    className={`option ${formData.found_out_about_us === option.value ? 'selected' : ''}`}
                                    onClick={() => handleChange({ target: { name: 'found_out_about_us', value: option.value } })}
                                >
                                    {option.label}
                                </div>
                            ))}
                        </div>

                        {formData.found_out_about_us === "Other" && (
                            <input type="text" name="other_source" placeholder="–£–∫–∞–∂–∏ –∏—Å—Ç–æ—á–Ω–∏–∫" value={formData.other_source} onChange={handleChange} required />
                        )}
                    </div>

                    <div>
                        <input type="text" name="direction_of_study" placeholder="–ù–∞ –∫–∞–∫–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —É—á–∏—à—å—Å—è?" onChange={handleChange} required />
                    </div>

                    <div className="aprove">
                        <input type="checkbox" id="aprove" onChange={() => setAproveSubmit(!aproveSubmit)} required />
                        <label htmlFor="aprove">–í —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –†–§ ¬´–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª ‚Ññ152-–§–ó –æ—Ç 27.07.2006 –¥–∞—é —Å–≤–æ—ë —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–≤–æ–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.</label>
                    </div>

                    <button type="submit" disabled={!aproveSubmit || isSubmitting}>
                        {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–•–æ—á—É –ø—Ä–∏–¥—Ç–∏'}
                    </button>
                    {error && <div className="error-message">{error}</div>}
                </form>
            )}
            <Link href="/" className="back-link">Fuck go back</Link>
        </div>
    );
} 